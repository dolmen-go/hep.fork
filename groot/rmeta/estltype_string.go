// Code generated by "stringer -type ESTLType consts.go"; DO NOT EDIT.

package rmeta

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NotSTL-0]
	_ = x[STLvector-1]
	_ = x[STLlist-2]
	_ = x[STLdeque-3]
	_ = x[STLmap-4]
	_ = x[STLmultimap-5]
	_ = x[STLset-6]
	_ = x[STLmultiset-7]
	_ = x[STLbitset-8]
	_ = x[STLforwardlist-9]
	_ = x[STLunorderedset-10]
	_ = x[STLunorderedmultiset-11]
	_ = x[STLunorderedmap-12]
	_ = x[STLunorderedmultimap-13]
	_ = x[STLend-14]
	_ = x[STLany-300]
	_ = x[STLstdstring-365]
}

const (
	_ESTLType_name_0 = "NotSTLSTLvectorSTLlistSTLdequeSTLmapSTLmultimapSTLsetSTLmultisetSTLbitsetSTLforwardlistSTLunorderedsetSTLunorderedmultisetSTLunorderedmapSTLunorderedmultimapSTLend"
	_ESTLType_name_1 = "STLany"
	_ESTLType_name_2 = "STLstdstring"
)

var (
	_ESTLType_index_0 = [...]uint8{0, 6, 15, 22, 30, 36, 47, 53, 64, 73, 87, 102, 122, 137, 157, 163}
)

func (i ESTLType) String() string {
	switch {
	case 0 <= i && i <= 14:
		return _ESTLType_name_0[_ESTLType_index_0[i]:_ESTLType_index_0[i+1]]
	case i == 300:
		return _ESTLType_name_1
	case i == 365:
		return _ESTLType_name_2
	default:
		return "ESTLType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
